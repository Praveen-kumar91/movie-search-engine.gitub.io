# Generated by Django 3.2.12 on 2022-06-07 09:47

import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "imdb_id",
                    models.CharField(
                        db_index=True,
                        help_text="IMDB ID of cast member",
                        max_length=128,
                        unique=True,
                        verbose_name="IMDB ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Cast member name",
                        max_length=150,
                        unique=True,
                        verbose_name="Cast member name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Info about cast member", null=True
                    ),
                ),
                (
                    "birthday",
                    models.DateField(
                        blank=True,
                        help_text="Birthday date",
                        null=True,
                        verbose_name="Birthday date",
                    ),
                ),
                (
                    "place_of_birth",
                    models.CharField(
                        blank=True,
                        help_text="Place of birth",
                        max_length=150,
                        null=True,
                        verbose_name="Place of birth",
                    ),
                ),
                (
                    "photo",
                    models.URLField(
                        help_text="Cast member photo",
                        max_length=220,
                        verbose_name="Cast member photo",
                    ),
                ),
            ],
            options={"verbose_name": "Cast", "verbose_name_plural": "Cast"},
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Category name",
                        max_length=150,
                        verbose_name="Category name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Unique ID",
                        max_length=160,
                        unique=True,
                        verbose_name="Unique ID",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="movies.category",
                    ),
                ),
            ],
            options={"verbose_name": "Category", "verbose_name_plural": "Categories"},
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        help_text="Movie title",
                        max_length=150,
                        verbose_name="Movie title",
                    ),
                ),
                (
                    "plot",
                    models.TextField(blank=True, help_text="Movie plot", null=True),
                ),
                (
                    "year",
                    models.PositiveSmallIntegerField(verbose_name="Movie release year"),
                ),
                ("poster", models.URLField(help_text="Movie poster", max_length=220)),
                (
                    "imdb_id",
                    models.CharField(
                        db_index=True,
                        help_text="Movie IMDB ID",
                        max_length=128,
                        unique=True,
                    ),
                ),
                (
                    "imdb_link",
                    models.URLField(help_text="Movie IMDB link", max_length=220),
                ),
                (
                    "imdb_rate",
                    models.FloatField(help_text="IMDB Rate", verbose_name="IMDB Rate"),
                ),
                (
                    "imdb_votes",
                    models.PositiveIntegerField(
                        help_text="IMDB Votes", verbose_name="IMDB Votes"
                    ),
                ),
                (
                    "runtime",
                    models.TimeField(
                        blank=True,
                        help_text="Movie runtime",
                        null=True,
                        verbose_name="Movie duration",
                    ),
                ),
                (
                    "release",
                    models.DateField(
                        blank=True,
                        help_text="Release date",
                        null=True,
                        verbose_name="Release date",
                    ),
                ),
                (
                    "keywords",
                    models.TextField(blank=True, help_text="Movie keywords", null=True),
                ),
                (
                    "country",
                    models.CharField(
                        help_text="Countries that made the movie", max_length=50
                    ),
                ),
                (
                    "box_office",
                    models.BigIntegerField(
                        blank=True,
                        help_text="Movie fees in the world",
                        null=True,
                        verbose_name="Movie fees in the world",
                    ),
                ),
                (
                    "age_mark",
                    models.CharField(
                        help_text="Movie age rate",
                        max_length=16,
                        verbose_name="Age mark",
                    ),
                ),
                (
                    "awards",
                    models.TextField(blank=True, help_text="Movie awards", null=True),
                ),
                (
                    "is_movie",
                    models.BooleanField(
                        default=True, help_text="Movie type (Movie/Series)"
                    ),
                ),
                (
                    "total_seasons",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Total seasons of series"
                    ),
                ),
                (
                    "actors",
                    models.ManyToManyField(
                        related_name="movie_actors", to="movies.Cast"
                    ),
                ),
                ("categories", models.ManyToManyField(to="movies.Category")),
                (
                    "directors",
                    models.ManyToManyField(
                        related_name="movie_directors", to="movies.Cast"
                    ),
                ),
                (
                    "writers",
                    models.ManyToManyField(
                        related_name="movie_writers", to="movies.Cast"
                    ),
                ),
            ],
            options={"verbose_name": "Movie", "verbose_name_plural": "Movies"},
        ),
        migrations.CreateModel(
            name="StreamingPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service",
                    models.CharField(
                        help_text="Streaming service name",
                        max_length=255,
                        verbose_name="Streaming service name",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
                (
                    "video_format",
                    models.CharField(
                        help_text="Available video formats",
                        max_length=255,
                        verbose_name="Available video formats",
                    ),
                ),
                (
                    "purchase_type",
                    models.CharField(
                        help_text="Available purchase types",
                        max_length=255,
                        verbose_name="Available purchase types",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
            ],
            options={
                "verbose_name": "Streaming platform",
                "verbose_name_plural": "Streaming platforms",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "text",
                    models.TextField(
                        help_text="Comment text", verbose_name="Comment text"
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "commented_on",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Comment published time",
                        verbose_name="Published time",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="movies.comment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "Comment", "verbose_name_plural": "Comments"},
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Collection name",
                        max_length=150,
                        verbose_name="Collection name",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "movies",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Movies in collection",
                        related_query_name="collection",
                        to="movies.Movie",
                        verbose_name="Movies in collection",
                    ),
                ),
            ],
            options={
                "verbose_name": "Collection",
                "verbose_name_plural": "Collections",
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "vote",
                    models.SmallIntegerField(
                        choices=[(-1, "👎"), (1, "👍")],
                        help_text="Vote value",
                        null=True,
                        verbose_name="Vote",
                    ),
                ),
                ("liked_on", models.DateTimeField(auto_now=True, help_text="Liked at")),
                ("object_id", models.PositiveIntegerField(blank=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vote",
                "verbose_name_plural": "Votes",
                "unique_together": {("user", "content_type", "object_id")},
            },
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "value",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Rate value",
                        null=True,
                        verbose_name="Rate value",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Rating",
                "verbose_name_plural": "Ratings",
                "unique_together": {("user", "content_type", "object_id")},
            },
        ),
    ]
